if (
  ($(document).ready(function () {
    if (window.matchMedia) {
      let r = $('head > link[rel="icon"][media]');
      $.each(r, function (e, t) {
        let n = window.matchMedia(t.media);
        function o() {
          n.matches && (r.remove(), (r = $(t).appendTo("head")));
        }
        n.addListener(o), o();
      });
    }
  }),
  "undefined" == typeof versions)
) {
  let e = [];
}
!(function (n) {
  window.matchMedia("(hover: hover)").matches &&
    (n(".navbar-nav .dropdown-toggle").on("mouseenter", function (e) {
      n(this).closest(".dropdown").hasClass("show") ||
        (e.stopPropagation(), n(this).trigger("click"));
    }),
    n(".navbar-nav .dropdown-toggle").on("mouseleave", function (e) {
      var t = e.toElement || e.relatedTarget;
      n(this).closest(".dropdown").hasClass("show") &&
        t !== n(this).siblings()[0] &&
        (e.stopPropagation(), n(this).trigger("click"));
    }),
    n(".navbar-nav .dropdown-menu").on("mouseleave", function (e) {
      e = e.toElement || e.relatedTarget;
      n(this).closest(".dropdown").hasClass("show") &&
        e !== n(this).siblings()[0] &&
        n(this).siblings().trigger("click");
    }));
})(jQuery),
  (function (n) {
    window.matchMedia("(hover: hover)").matches &&
      (n("#toggle-full-footer").on("mouseenter", function (e) {
        n(".website-links").hasClass("show") ||
          (e.stopPropagation(), n("#toggle-full-footer").trigger("click"));
      }),
      n("#toggle-full-footer-wrapper").on("mouseleave", function (e) {
        var t = e.toElement || e.relatedTarget;
        n(".website-links").hasClass("show") &&
          t !== n(this).siblings()[0] &&
          (e.stopPropagation(), n("#toggle-full-footer").trigger("click"));
      }));
  })(jQuery);
let searchbar = $(".nav-top .desktop-search-form .header-search"),
  mainmenu = $(".nav-top .main-menu"),
  querystr = $(".desktop-search-form .header-search .form-control"),
  nav = $(".nav-top nav");
function checkScroll() {
  60 < $(document).scrollTop()
    ? ($(".nav-top").addClass("d-none"), $(".inner-body").addClass("not-top"))
    : ($(".nav-top").removeClass("d-none"),
      $(".inner-body").removeClass("not-top"));
}
$(".desktop-search-form .header-search form").on("submit", function (e) {
  ("" !== querystr.val() && "Search" !== querystr.val()) || e.preventDefault();
}),
  $(".desktop-search-form .header-search .form-control").on(
    "focus",
    function (e) {
      searchbar.hasClass("expanded") ||
        ($(".nav-top nav").addClass("d-none"),
        $(".desktop-search-form .header-search svg").addClass("d-none"),
        $(".desktop-search-form .header-search .btn-close").removeClass(
          "d-none"
        ),
        searchbar.addClass("expanded").removeClass("collapsed"),
        mainmenu.addClass("collapsed").removeClass("expanded"),
        setTimeout(() => {
          $(this).attr("autocomplete", "on");
        }, 500));
    }
  ),
  $(".desktop-search-form .header-search .btn-close").on("click", function (e) {
    $(".desktop-search-form .header-search .btn-close").addClass("d-none"),
      $(".desktop-search-form .header-search svg").removeClass("d-none"),
      searchbar.removeClass("expanded").addClass("collapsed"),
      mainmenu.removeClass("collapsed").addClass("expanded"),
      nav.removeClass("d-none"),
      querystr.val(""),
      $(".desktop-search-form .header-search .form-control").attr(
        "autocomplete",
        "off"
      );
  }),
  checkScroll(),
  $(window).on("scroll", function () {
    checkScroll();
  });
let minVersionRedoc = "4.0",
  useApiRedoc =
    0 <= compareVersion(DOCUMENTATION_OPTIONS.VERSION, minVersionRedoc),
  newTabNodes = ["user-manual/api/reference", "cloud-service/apis/reference"],
  oursHost = ["documentation.theopenarmor.org"];
function compareVersion(n, o) {
  let r = !1;
  if ("string" == typeof n && "string" == typeof o) {
    let e = n.split("."),
      t = o.split(".");
    2 <= e.length &&
      2 <= t.length &&
      ((e = e.map((e) => parseInt(e))),
      (t = t.map((e) => parseInt(e))),
      (r =
        e[0] > t[0]
          ? 1
          : e[0] < t[0]
          ? -1
          : e[1] > t[1]
          ? 1
          : e[1] < t[1]
          ? -1
          : 0));
  }
  return r;
}
function markTocNodesWithClass(e, n, o) {
  e.forEach(function (e) {
    markedNode = ".+/" + e + ".html";
    let t = new RegExp(markedNode, "g");
    $(o + " a").each(function () {
      var e = $(this).prop("href").split("#")[0];
      t.test(e) && $(this).addClass(n);
    });
  });
}
$("a.reference.external").each(function () {
  var e = new URL(this.href);
  oursHost.includes(e.host) ||
    $(this).attr("target", "_blank").attr("rel", "noreferrer noopener");
});
let switchButton = $("#mode-switch");
if (0 < switchButton.length) {
  let t = $("#mode-switch-label"),
    e = window.matchMedia("(prefers-color-scheme: dark)"),
    n = localStorage.getItem("theme");
  "dark" == (n = n || (e.matches ? "dark" : "light"))
    ? t.text("Switch to light mode")
    : "light" == n
    ? t.text("Switch to dark mode")
    : t.text("Switch mode"),
    switchButton.attr("class", n),
    switchButton.on("click", function () {
      let e;
      "dark" == this.classList[0]
        ? ((e = "light"), t.text("Switch to dark mode"))
        : ((e = "dark"), t.text("Switch to light mode")),
        switchButton.attr("class", e),
        localStorage.setItem("theme", e),
        document.documentElement.classList.toggle("light-theme"),
        document.documentElement.classList.toggle("dark-theme");
    });
}
$(function () {
  $("#btn-scroll").on("click", function () {
    return $("html, body").animate({ scrollTop: 0 }, "slow"), !1;
  }),
    $(document).on("scroll", function () {
      $(document).scrollTop() >= 0.5 * jQuery(window).height()
        ? $(".appear-on-scroll").fadeIn("slow")
        : $(".appear-on-scroll").fadeOut("slow");
    }),
    $(".appear-on-scroll.init-hidden").hide(),
    $(".appear-on-scroll.init-hidden").removeClass("init-hidden");
});
try {
  var session = window.sessionStorage || {};
} catch (e) {
  session = {};
}
function keyTabs(e) {
  var t = e.target;
  let n = null;
  (39 !== e.keyCode && 37 !== e.keyCode) ||
    (t.setAttribute("tabindex", -1),
    39 === e.keyCode
      ? null === (n = t.nextElementSibling) &&
        (n = t.parentNode.firstElementChild)
      : 37 === e.keyCode &&
        null === (n = t.previousElementSibling) &&
        (n = t.parentNode.lastElementChild)),
    null !== n && (n.setAttribute("tabindex", 0), n.focus());
}
function changeTabs(e) {
  var t = "false" === this.getAttribute("aria-selected"),
    n = this.parentNode.getBoundingClientRect().top,
    o = !this.parentNode.classList.contains("closeable"),
    o =
      (deselectTabList(this),
      (t || o) &&
        (selectTab(this),
        selectNamedTabs((t = this.getAttribute("name")), this.id),
        this.classList.contains("group-tab")) &&
        session.setItem("sphinx-tabs-last-selected", t),
      this.parentNode.getBoundingClientRect().top);
  window.scrollTo(0, window.scrollY + (o - n));
}
function selectTab(e) {
  e.setAttribute("aria-selected", !0),
    document
      .getElementById(e.getAttribute("aria-controls"))
      .removeAttribute("hidden");
}
function deselectTabList(e) {
  var e = e.parentNode,
    t = e.parentNode;
  Array.from(e.children).forEach((e) => e.setAttribute("aria-selected", !1)),
    Array.from(t.children)
      .slice(1)
      .forEach((e) => e.setAttribute("hidden", !0));
}
function selectNamedTabs(t, n = null) {
  var e = document.querySelectorAll(`.sphinx-tabs-tab[name="${t}"]`);
  Array.from(e)
    .map((e) => e.parentNode)
    .forEach((e) => {
      null === e.querySelector(`[id="${n}"]`) &&
        (deselectTabList(
          (e = e.querySelector(`.sphinx-tabs-tab[name="${t}"]`))
        ),
        selectTab(e));
    });
}
window.addEventListener("DOMContentLoaded", () => {
  var e = document.querySelectorAll(".sphinx-tabs-tab"),
    t = document.querySelectorAll('[role="tablist"]'),
    e =
      (e.forEach((e) => {
        e.addEventListener("click", changeTabs);
      }),
      t.forEach((e) => {
        e.addEventListener("keydown", keyTabs);
      }),
      session.getItem("sphinx-tabs-last-selected"));
  null != e && selectNamedTabs(e);
}),
  ((exports = "undefined" == typeof exports ? {} : exports).keyTabs = keyTabs),
  (exports.changeTabs = changeTabs),
  (exports.selectTab = selectTab),
  (exports.deselectTabList = deselectTabList),
  (exports.selectNamedTabs = selectNamedTabs),
  $(function () {
    $(".admonition").each(function () {
      var e = $(this);
      e.hasClass("long") ||
        e.hasClass("not-long") ||
        ((2 < e.children().length ||
          300 < e.children(":nth-child(2)").text().length) &&
          e.addClass("long"));
    });
  }),
  $(function () {
    var s = document.getElementsByClassName("accordion-section");
    for (let r = 0; r < s.length; r++) {
      var a = s[r].previousElementSibling;
      let t = s[r];
      var i = s[r].parentElement.getAttribute("id") + "-accordion",
        l = s[r].parentElement;
      let e = "collapsed",
        n = "",
        o = !1;
      s[r].classList.contains("open") && ((e = ""), (n = " show"), (o = !0)),
        l.classList.add("accordion-parent"),
        c(a, {
          "data-toggle": "collapse",
          href: "#" + i,
          role: "button",
          "aria-expanded": o,
          "aria-controls": i,
          class: "accordion-title " + e,
        }),
        c(t, { class: "accordion-section accordion collapse" + n, id: i }),
        a
          .getElementsByClassName("headerlink")[0]
          .addEventListener("click", function (e) {
            t.classList.contains("show") && e.stopPropagation();
          }),
        -1 < window.location.href.indexOf(l.getAttribute("id")) &&
          a.classList.contains("collapsed") &&
          a.click();
    }
    function c(e, t) {
      for (var n in t)
        Object.prototype.hasOwnProperty.call(t, n) && e.setAttribute(n, t[n]);
    }
  });
let BLACKLISTED_KEY_CONTROL_ELEMENTS = new Set([
    "TEXTAREA",
    "INPUT",
    "SELECT",
    "BUTTON",
  ]),
  _ready = (e) => {
    "loading" !== document.readyState
      ? e()
      : document.addEventListener("DOMContentLoaded", e);
  },
  Documentation = {
    init: () => {
      Documentation.initDomainIndexTable(), Documentation.initOnKeyListeners();
    },
    TRANSLATIONS: {},
    PLURAL_EXPR: (e) => (1 === e ? 0 : 1),
    LOCALE: "unknown",
    gettext: (e) => {
      var t = Documentation.TRANSLATIONS[e];
      switch (typeof t) {
        case "undefined":
          return e;
        case "string":
          return t;
        default:
          return t[0];
      }
    },
    ngettext: (e, t, n) => {
      var o = Documentation.TRANSLATIONS[e];
      return "undefined" != typeof o
        ? o[Documentation.PLURAL_EXPR(n)]
        : 1 === n
        ? e
        : t;
    },
    addTranslations: (e) => {
      Object.assign(Documentation.TRANSLATIONS, e.messages),
        (Documentation.PLURAL_EXPR = new Function(
          "n",
          `return (${e.plural_expr})`
        )),
        (Documentation.LOCALE = e.locale);
    },
    focusSearchBar: () => {
      document.querySelectorAll("input[name=q]")[0]?.focus();
    },
    initDomainIndexTable: () => {
      let t = (e) => {
        var t = e.id.substr(7),
          t = document.querySelectorAll("tr.cg-" + t);
        "minus.png" === e.src.substr(-9)
          ? ((e.src = e.src.substr(0, e.src.length - 9) + "plus.png"),
            t.forEach((e) => (e.style.display = "none")))
          : ((e.src = e.src.substr(0, e.src.length - 8) + "minus.png"),
            t.forEach((e) => (e.style.display = "")));
      };
      var e = document.querySelectorAll("img.toggler");
      e.forEach((e) => e.addEventListener("click", (e) => t(e.currentTarget))),
        e.forEach((e) => (e.style.display = "")),
        DOCUMENTATION_OPTIONS.COLLAPSE_INDEX && e.forEach(t);
    },
    initOnKeyListeners: () => {
      (DOCUMENTATION_OPTIONS.NAVIGATION_WITH_KEYS ||
        DOCUMENTATION_OPTIONS.ENABLE_SEARCH_SHORTCUTS) &&
        document.addEventListener("keydown", (e) => {
          if (
            !BLACKLISTED_KEY_CONTROL_ELEMENTS.has(
              document.activeElement.tagName
            ) &&
            !(e.altKey || e.ctrlKey || e.metaKey)
          ) {
            if (!e.shiftKey)
              switch (e.key) {
                case "ArrowLeft":
                  DOCUMENTATION_OPTIONS.NAVIGATION_WITH_KEYS &&
                    (t = document.querySelector('link[rel="prev"]')) &&
                    t.href &&
                    ((window.location.href = t.href), e.preventDefault());
                  break;
                case "ArrowRight":
                  var t;
                  DOCUMENTATION_OPTIONS.NAVIGATION_WITH_KEYS &&
                    (t = document.querySelector('link[rel="next"]')) &&
                    t.href &&
                    ((window.location.href = t.href), e.preventDefault());
              }
            "/" === e.key &&
              DOCUMENTATION_OPTIONS.ENABLE_SEARCH_SHORTCUTS &&
              (Documentation.focusSearchBar(), e.preventDefault());
          }
        });
    },
  },
  _ = Documentation.gettext,
  SPHINX_HIGHLIGHT_ENABLED = (_ready(Documentation.init), !0),
  _highlight = (t, n, o, r) => {
    if (t.nodeType === Node.TEXT_NODE) {
      var s = t.nodeValue,
        a = t.parentNode,
        i = s.toLowerCase().indexOf(o);
      if (
        0 <= i &&
        !a.classList.contains(r) &&
        !a.classList.contains("nohighlight")
      ) {
        let e;
        var l = a.closest("body, svg, foreignObject"),
          l = l && l.matches("svg");
        l
          ? (e = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "tspan"
            ))
          : (e = document.createElement("span")).classList.add(r),
          e.appendChild(document.createTextNode(s.substr(i, o.length))),
          a.insertBefore(
            e,
            a.insertBefore(
              document.createTextNode(s.substr(i + o.length)),
              t.nextSibling
            )
          ),
          (t.nodeValue = s.substr(0, i)),
          l &&
            ((s = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "rect"
            )),
            (i = a.getBBox()),
            (s.x.baseVal.value = i.x),
            (s.y.baseVal.value = i.y),
            (s.width.baseVal.value = i.width),
            (s.height.baseVal.value = i.height),
            s.setAttribute("class", r),
            n.push({ parent: a, target: s }));
      }
    } else
      t.matches &&
        !t.matches("button, select, textarea") &&
        t.childNodes.forEach((e) => _highlight(e, n, o, r));
  },
  _highlightText = (e, t, n) => {
    var o = [];
    _highlight(e, o, t, n),
      o.forEach((e) => e.parent.insertAdjacentElement("beforebegin", e.target));
  },
  SphinxHighlight = {
    highlightSearchWords: () => {
      if (SPHINX_HIGHLIGHT_ENABLED) {
        var n = new URL(window.location),
          o =
            localStorage.getItem("sphinx_highlight_terms") ||
            n.searchParams.get("highlight") ||
            "";
        localStorage.removeItem("sphinx_highlight_terms"),
          n.searchParams.delete("highlight"),
          window.history.replaceState({}, "", n);
        let e = o
          .toLowerCase()
          .split(/\s+/)
          .filter((e) => e);
        if (0 !== e.length) {
          n = document.querySelectorAll("main>section");
          let t = n.length ? n[0] : document.querySelector("body");
          window.setTimeout(() => {
            e.forEach((e) => _highlightText(t, e, "highlighted"));
          }, 10);
          o = document.getElementById("searchbox");
          null !== o &&
            o.appendChild(
              document
                .createRange()
                .createContextualFragment(
                  '<p class="highlight-link"><a href="javascript:SphinxHighlight.hideSearchWords()">' +
                    _("Hide Search Matches") +
                    "</a></p>"
                )
            );
        }
      }
    },
    hideSearchWords: () => {
      document
        .querySelectorAll("#searchbox .highlight-link")
        .forEach((e) => e.remove()),
        document
          .querySelectorAll("span.highlighted")
          .forEach((e) => e.classList.remove("highlighted")),
        localStorage.removeItem("sphinx_highlight_terms");
    },
    initEscapeListener: () => {
      DOCUMENTATION_OPTIONS.ENABLE_SEARCH_SHORTCUTS &&
        document.addEventListener("keydown", (e) => {
          BLACKLISTED_KEY_CONTROL_ELEMENTS.has(
            document.activeElement.tagName
          ) ||
            e.shiftKey ||
            e.altKey ||
            e.ctrlKey ||
            e.metaKey ||
            (DOCUMENTATION_OPTIONS.ENABLE_SEARCH_SHORTCUTS &&
              "Escape" === e.key &&
              (SphinxHighlight.hideSearchWords(), e.preventDefault()));
        });
    },
  };
function checkEncodeURI(e) {
  return /\%/i.test(e);
}
if (
  (_ready(SphinxHighlight.highlightSearchWords),
  _ready(SphinxHighlight.initEscapeListener),
  jQuery(function (u) {
    let p = DOCUMENTATION_OPTIONS.VERSION,
      f = "undefined" == typeof versions ? [] : versions;
    (a = u("#version-selector .current")),
      (l = DOCUMENTATION_OPTIONS.VERSION),
      0 < f.length
        ? a.html("Version " + l + (l == f[0] ? " (current)" : ""))
        : a.html("Version " + l);
    let s = t();
    u(window).on("hashchange", function () {
      s = t();
    });
    {
      var a = s;
      let t = DOCUMENTATION_OPTIONS.VERSION,
        n = f[0],
        o = "";
      if (t !== n) {
        "/" == (o = document.location.pathname)[o.length - 1] &&
          (o += "index.html"),
          -1 != o.indexOf(t)
            ? (o = o.split("/" + t)[1])
            : -1 != o.indexOf("current") && (o = o.split("/current")[1]);
        var l = document.querySelector(".link-latest");
        let e = "https://" + window.location.hostname + "/current";
        s.hasOwnProperty(n) && (e += a[n]), l && l.setAttribute("href", e);
      }
    }
    a = Object.keys(s);
    let e = a[a.length - 1];
    l = s[e];
    function t() {
      var e = u("#version-selector .dropdown-menu"),
        t = window.location.href || document.URL,
        n = 0 <= t.indexOf("http");
      let o = "",
        s = "";
      var a, i;
      if (0 == f.length) return {};
      -1 !=
      (s =
        "/" ==
        (s = (n ? t.split(document.location.host) : t.split("/html"))[1])[
          s.length - 1
        ]
          ? s + "index.html"
          : s).indexOf(p)
        ? "/" !== (s = s.split("/" + p)[1])[s.length - 1] &&
          (((s = s.split("/"))[0] = ""), (s = s.join("/")))
        : -1 != s.indexOf("current") && (s = s.split("/current")[1]),
        (t = s.split("?")),
        (s = g(t[0])),
        (a = 2 == t.length ? "?" + t[1] : "");
      let l,
        c,
        h = f;
      for (let e = 0; e < h.length; e++)
        newUrls[h[e]] && (newUrls[h[e]] = newUrls[h[e]].map(g)),
          removedUrls[h[e]] && (removedUrls[h[e]] = removedUrls[h[e]].map(g));
      for (let e = 0; e < redirections.length; e++)
        for (release in redirections[e])
          Object.prototype.hasOwnProperty.call(redirections[e], release) &&
            (redirections[e][release] = g(redirections[e][release]));
      var d = (function (n, e, t, o, s, a) {
        var i = [],
          l = [];
        l[e] = t;
        let c = [],
          h = ((n = n.reverse()), E(e, n)),
          d = "toBoth";
        h == n.length && (d = "toBottom");
        0 == h && (d = "toTop");
        c.push({ page: t, version: e, versionNum: h, direction: d });
        let u = 0;
        for (; c.length; ) {
          var p,
            f = c.pop();
          let e = C(f.page, s),
            t = O(f, e, n);
          for (
            0 == t.length &&
            (1 < (p = f.page.split("#")).length &&
              0 != (e = C(p[0], s)).length &&
              (f.page = p[0]),
            (t = O(f, e, n)));
            t.length;

          ) {
            var g = t.pop(),
              m = g.url,
              b = g.release,
              y = g.direction,
              g = E(g.release, n),
              g = { page: m, version: b, versionNum: g, direction: y };
            c.push(g), (l[b] = m);
          }
          if (1e3 <= u) return !(c = []);
          u++;
        }
        for (x in ((historyArray1 = N("toBottom", l, h, n)),
        (historyArray2 = N("toTop", l, h, n)),
        historyArray1))
          !{}.hasOwnProperty.call(historyArray1, x) ||
            (i[x] = historyArray1[x]);
        for (x in historyArray2)
          !{}.hasOwnProperty.call(historyArray2, x) ||
            (i[x] = historyArray2[x]);
        t = (function (e, t) {
          let n = !1;
          for (forRelease in t)
            if ({}.hasOwnProperty.call(t, forRelease))
              for (forUrl in t[forRelease])
                !{}.hasOwnProperty.call(t[forRelease], forUrl) ||
                  e.split("#")[0] != t[forRelease][forUrl] ||
                  (((n = []).release = forRelease),
                  (n.url = t[forRelease][forUrl]));
          return n;
        })(i[n[0]], o);
        if (!1 !== t) {
          var v,
            T = E(t.release, n);
          for (r in i)
            ({}).hasOwnProperty.call(i, r) &&
              ((v = E(r, n)), parseInt(v) < parseInt(T)) &&
              delete i[r];
        }
        e = (function (e, t) {
          let n = !1;
          for (forRelease in t)
            if ({}.hasOwnProperty.call(t, forRelease))
              for (forUrl in t[forRelease])
                !{}.hasOwnProperty.call(t[forRelease], forUrl) ||
                  e.split("#")[0] != t[forRelease][forUrl] ||
                  (((n = []).release = forRelease),
                  (n.url = t[forRelease][forUrl]));
          return n;
        })(i[n[n.length - 1]], a);
        if (!1 !== e) {
          var w,
            $ = E(e.release, n);
          for (r in i)
            ({}).hasOwnProperty.call(i, r) &&
              ((w = E(r, n)), parseInt(w) >= parseInt($)) &&
              delete i[r];
        }
        return i;
      })(h, p, s, newUrls, redirections, removedUrls);
      h = h.reverse();
      for (let e = 0; e < f.length; e++)
        (l = ""),
          (c = ""),
          null != d[(i = h[e])] && d[i].length
            ? (l = 0 == e ? "/current" + d[i] + a : "/" + i + d[i] + a)
            : (c =
                'class="disabled" data-toggle="tooltip" data-placement="left" title="This page is not available in version ' +
                f[e] +
                (0 == e ? " (current)" : "") +
                '"'),
          !n &&
            0 < l.length &&
            (l = "https://documentation.theopenarmor.org" + l),
          (o +=
            '<li><a href="' +
            l +
            '" ' +
            c +
            "> Version " +
            f[e] +
            (0 == e ? " (current)" : "") +
            "</a></li>"),
          i == f[0] && u(".no-latest-notice .link-latest").attr("href", l);
      return e.html(o), d;
    }
    function g(t) {
      if (Array.isArray(t)) return t;
      {
        let e = t.trim();
        return (
          "/" ==
            (e =
              "#" ==
              (e = (e = e.replace(/\/$/, "/index.html")).replace(
                /\/{2,}/,
                "/"
              )).charAt(e.length - 1)
                ? e.substring(0, e.length - 1)
                : e).charAt(e.length - 1) ||
            /.*(\.html|#.*)$/.test(e) ||
            (e += "/"),
          (e = checkEncodeURI((e = "/" != e.charAt(0) ? "/" + e : e))
            ? e
            : encodeURI(e))
        );
      }
    }
    function E(e, t) {
      let n = -1;
      for (i in t) e == t[i] && (n = i);
      return n;
    }
    function C(e, t) {
      var n = [];
      for (forId in t)
        if ({}.hasOwnProperty.call(t, forId))
          for (forRelease in t[forId])
            "target" != forRelease &&
              e == t[forId][forRelease] &&
              n.push(t[forId]);
      return n;
    }
    function O(e, t, n) {
      for (var o = [], r = t; r.length; ) {
        var s,
          a,
          i,
          l = r.pop();
        for (forTarget in l.target)
          ({}).hasOwnProperty.call(l.target, forTarget) &&
            ((s = l.target[forTarget].split("=>")),
            (a = parseInt(E(s[0], n))),
            (i = parseInt(E(s[1], n))),
            e.page == l[s[0]]) &&
            ("toBottom" != e.direction &&
              a < i &&
              parseInt(e.versionNum) <= a &&
              o.push({ release: s[1], direction: "toTop", url: l[s[1]] }),
            "toTop" != e.direction) &&
            i < a &&
            parseInt(e.versionNum) >= a &&
            o.push({ release: s[1], direction: "toBottom", url: l[s[1]] });
      }
      return o;
    }
    function N(e, t, n, o) {
      var r,
        s = [];
      for (forVersions in o)
        ({}).hasOwnProperty.call(o, forVersions) &&
          ((forVersions = parseInt(forVersions)),
          "toBottom" == e &&
            forVersions < n &&
            (null == t[o[forVersions]]
              ? forVersions != o.length - 1 &&
                -1 !=
                  (r = (function (e, t, n) {
                    let o = -1;
                    for (i in t)
                      ({}).hasOwnProperty.call(t, i) &&
                        (i = parseInt(i)) > e &&
                        null != n[t[i]] &&
                        -1 == o &&
                        (o = i);
                    return o;
                  })(forVersions, o, t)) &&
                (s[o[forVersions]] = t[o[r]])
              : (s[o[forVersions]] = t[o[forVersions]])),
          "toTop" == e) &&
          forVersions >= n &&
          (null == t[o[forVersions]]
            ? 0 != forVersions &&
              -1 !=
                (r = (function (e, t, n) {
                  let o = -1;
                  for (i in t)
                    ({}).hasOwnProperty.call(t, i) &&
                      (i = parseInt(i)) >= e &&
                      null != n[t[i - 1]] &&
                      -1 == o &&
                      (o = i - 1);
                  return o;
                })(forVersions, o, s)) &&
              (s[o[forVersions]] = s[o[r]])
            : (s[o[forVersions]] = t[o[forVersions]]));
      return s;
    }
    e == f[0] && (e = "current"),
      document.querySelector("link[rel='canonical']") ||
        ((a = document.createElement("link")).setAttribute("rel", "canonical"),
        a.setAttribute(
          "href",
          document.location.protocol +
            "//" +
            document.location.host +
            "/" +
            e +
            l
        ),
        document.head.appendChild(a)),
      u('#version-selector [data-toggle="tooltip"]').tooltip({
        container: "header",
      });
  }),
  $("#version-selector a.disable").click(function (e) {
    return e.preventDefault(), e.stopPropagation(), !1;
  }),
  0 < $("#global-toc").length)
) {
  function completelyHideMenuItems() {
    $("#global-toc li ul").each(function () {
      $(this).closest("li").hasClass("show")
        ? ((this.hidden = !1), $(this).slideDown(300))
        : $(this).slideUp(300, function () {
            this.hidden = !0;
          });
    });
  }
  $("#global-toc .toctree-l1 a").each(function (e) {
    $(this).siblings("ul").length &&
      ($(this).closest("li").addClass("toc-toggle"),
      $(this).append(
        $(
          '<button class="toc-toggle-btn"><span class="sr-only">Expand submenu</span></button>'
        )
      ));
  }),
    $("#global-toc .current-toc-node").each(function () {
      $(this).on("click", function (e) {
        e.preventDefault(), $("html, body").animate({ scrollTop: 0 }, "500");
      });
    }),
    $("#global-toc a .toc-toggle-btn").on("click", function (e) {
      return (
        $("#global-toc a .toc-toggle-btn .sr-only").text("Expand submenu"),
        $(this).find(".sr-only").text("Close submenu"),
        !(li = $(e.target).closest("li")) ||
          0 == li.children("ul").length ||
          (e.stopPropagation(),
          e.preventDefault(),
          li.hasClass("show")
            ? li.removeClass("show")
            : (li.siblings("li").removeClass("show"), li.addClass("show")),
          li.parents().hasClass("show") ||
            $(".globaltoc li.show").addClass("show"),
          $(".globaltoc li.initial").removeClass("initial"),
          completelyHideMenuItems(),
          !1)
      );
    }),
    emptyTocNodes &&
      (markTocNodesWithClass(emptyTocNodes, "empty-toc-node", "#global-toc"),
      $("#global-toc .current-toc-node").addClass("empty-toc-node")),
    $("#global-toc .empty-toc-node").each(function () {
      $(this).on("click", function (e) {
        e.preventDefault(), $(this).find(".toc-toggle-btn").click();
      });
    }),
    useApiRedoc &&
      (markTocNodesWithClass(newTabNodes, "js-new-tab", ""),
      $(".js-new-tab").attr("target", "_blank"));
  let e = [
    "Install Armor manager on Linux",
    "Install Armor agent on Linux",
  ].map(function (e) {
    return e.toLowerCase();
  });
  function hideSubtree(e) {
    $("#global-toc a").each(function () {
      -1 !== jQuery.inArray($(this).text().toLowerCase(), e) &&
        ($(this).siblings().hide(), $(this).children("button").hide());
    });
  }
  hideSubtree(e);
}
if (
  ($(document).ready(function () {
    if (0 < $("#local-toc").length) {
      var t = $(
        "#local-toc > .navbar-nav > .nav-item:first-of-type > .nav-link"
      );
      let e = $("main:first-of-type > .section:first-of-type");
      var n = (e =
        0 === e.length
          ? $("main:first-of-type > section:first-of-type")
          : e).attr("id");
      n && t.attr("href", t.attr("href") + n);
    }
  }),
  $("#local-toc .nav-link").on("click", function (e) {
    (e = $(e.target).attr("href")),
      (e = $('[href="' + e + '"].headerlink').parent());
    e.hasClass("collapsed") && e.click();
  }),
  0 < $(".document").length)
) {
  let e = document.createElement("div");
  function filterCodeBlock(e, t) {
    var n = e.clone(!0);
    n.find(".gp").empty();
    let o = n.text();
    (n = findHeredocs(e)), (e = getCodeBlockType(t).toLowerCase());
    return (
      (o = String(o)),
      -1 === jQuery.inArray(e, ["none", "bash"]) &&
        ((o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = o.replace(
          /(^|\n)\s*(\.\s{0,1}){3}\s*($|\n)/g,
          "\n"
        )).replace(/(.+]\$\s)/g, "")).replace(/(.+]\#\s)/g, "")).replace(
          /ansible@ansible:.+\$\s/g,
          ""
        )).replace(/mysql>\s/g, "")).replace(/sqlite>\s/g, "")).replace(
          /Query\s.+\)\n/g,
          ""
        )).replace(/.+@.+:.+(\#|\$)\s/g, "")).replace(/^>\s/g, "")).replace(
          /\n>\s/g,
          "\n"
        )).replace(/(?:\$\s)/g, "")).replace(/\n{2,}$/g, "\n")),
        -1 !== jQuery.inArray(e, ["yaml", "python", "perl", "powershell"]) ||
          t.is($('[class*="conf"]')) ||
          (o = /<<[^<]/.test(o)
            ? replacePromptOnHeredoc(o, n, e)
            : filterPrompt(o, e))),
      (o = o.trim())
    );
  }
  function findHeredocs(e) {
    e = $(e).text().split("\n");
    let n = [],
      o = !1,
      r,
      s,
      a;
    return (
      e.forEach((e, t) => {
        o
          ? closes(r, e.trim()) &&
            ((o = !1), (a = t - 1) > s) &&
            n.push({ start: s, finish: a })
          : /<<[^<]/.test(e) &&
            ((o = !0), (s = t + 1), (r = e.split("<<")[1].trim()));
      }),
      n
    );
  }
  function filterPrompt(e, t) {
    return (
      "bash" != t && (e = e.replace(/(?:\#\s)/g, "")),
      (e =
        -1 < jQuery.inArray(t, ["console"])
          ? (e = e.replace(/(^|\n)\/\/.+/g, "")).replace(/\n{2,}/g, "\n")
          : e)
    );
  }
  function getCodeBlockType(e) {
    let t = "";
    var n = e.get(0).classList;
    for (let e = 0; e < n.length; e++)
      if (-1 !== n[e].indexOf("highlight-"))
        return (t = n[e].split("highlight-")[1]);
    return t;
  }
  function replacePromptOnHeredoc(e, t, o) {
    let r = [];
    return (
      e.split("\n").forEach(function (e, n) {
        t.find(({ start: e, finish: t }) => e <= n && n <= t) ||
          (e = filterPrompt(e, o)),
          r.push(e);
      }),
      r.join("\n")
    );
  }
  function closes(e, t) {
    return t.replace(/[-\\'"]/g, "") == e.replace(/[-\\'"]/g, "");
  }
  function copyToClipboard(e) {
    var t = document.createElement("textarea");
    (t.value = e),
      document.body.appendChild(t),
      t.select(),
      document.execCommand("copy"),
      document.body.removeChild(t);
  }
  e.setAttribute("class", "output-title"),
    e.setAttribute("role", "button"),
    (e.innerHTML = "Output"),
    $('[class*="highlight-"].output').each(function () {
      $(this).addClass("collapsible").attr("aria-expanded", "false"),
        $(this).prepend(e.cloneNode(!0)),
        $(this).hasClass("collapsed") ||
          $(this).addClass("expanded").attr("aria-expanded", "true");
    }),
    $('[class*="highlight-"].output.collapsible .output-title').on(
      "click",
      function (e) {
        let t = $(e.target).closest('[class*="highlight-"]');
        "false" === t.attr("aria-expanded")
          ? (t.removeClass("collapsed").attr("aria-expanded", "true"),
            setTimeout(function () {
              t.addClass("expanded");
            }, 300))
          : (t.removeClass("expanded").attr("aria-expanded", "false"),
            setTimeout(function () {
              t.addClass("collapsed");
            }, 300));
      }
    ),
    $(".highlight").each(function () {
      if ($(this).parent().hasClass("escaped-tag-signs")) {
        let n = $(this).html(),
          o = n.split(/\\</);
        (n = ""),
          o.forEach(function (e, t) {
            0 != t &&
              ((e = (gtFragments = e.split(/&gt;/)).shift()),
              gtFragments.length) &&
              (e += "\\>" + gtFragments.join(">")),
              t != o.length - 1 ? (n += e + "\\<") : (n += e);
          }),
          $(this).html(n);
      }
    }),
    $(".highlight").each(function () {
      let o = /\s+$/g;
      var e = $(this),
        t =
          (e.find(".gp").each(function () {
            var e = $(this);
            let t = e.text().match(o),
              n = "";
            t = t && t[0].length - 1;
            for (let e = 0; e < t; e++) n += "&nbsp;";
            $("<span>" + n + "</span>").insertAfter(e),
              e.html(e.html().replace(o, " "));
          }),
          e.html()),
        n = getCodeBlockType(e.parent()).toLowerCase();
      if (-1 === jQuery.inArray(n, ["none", "bash"])) {
        let a = findHeredocs(t);
        if (null != t.match(/(?:\$\s|\#)/g)) {
          n = t.split("\n");
          let s = [];
          n.forEach(function (e, n) {
            var t = a.find(({ start: e }) => e === n),
              o = a.find(({ finish: e }) => e === n),
              r = a.find(({ start: e, finish: t }) => e < n && n < t);
            t
              ? (e = '<span class="heredoc">' + e)
              : o
              ? (e += "</span>")
              : r ||
                (e = e.replace(
                  /(?:\$\s)/g,
                  '<span class="no-select">$ </span>'
                )),
              s.push(e);
          }),
            e.html(s.join("\n"));
        }
      }
    }),
    $(".highlight").each(function () {
      var e = $(this).parent();
      e.closest('[class*="highlight-"]').hasClass("output") ||
        e.hasClass("no-copy") ||
        e.prepend(
          '<button type="button" class="copy-to-clipboard" title="Copy to clipboard"><span>Copied to clipboard</span><svg class="icon" aria-hidden="true"><use xlink:href="#copy-icon"></use></svg></button>'
        );
    }),
    $(".copy-to-clipboard").click(function () {
      let e = $(this);
      copyToClipboard(
        filterCodeBlock($(e).parent().find(".highlight"), $(e).parent())
      ),
        $(e).addClass("copied"),
        $(e)
          .find("svg")
          .css({ display: "none" })
          .find("span")
          .css({ display: "block" }),
        $(e).find("span").css({ display: "block" }),
        setTimeout(function () {
          $(e).removeClass("copied");
        }, 700),
        setTimeout(function () {
          $(e).find("span").css({ display: "none" }),
            $(e).find("svg").css({ display: "block" }),
            $(e).focus();
        }, 1e3);
    });
}
if ($(".document")) {
  let t = "https://DOMAIN";
  function reponsiveTables() {
    $("table.docutils:not(.list-rows)").removeClass("table-responsive"),
      $("table.docutils:not(.list-rows)").each(function () {
        $(this).width() > $("main > div:first-of-type").width() &&
          $(this).addClass("table-responsive");
      });
  }
  $('[href^="' + t + '/"]').each(function () {
    var e = $(this).attr("href");
    $(this).attr("href", e.replace(t + "/", DOCUMENTATION_OPTIONS.URL_ROOT)),
      $(this).attr("target", "_blank");
  }),
    $("main .reference.internal").each(function () {
      let t = this;
      newTabNodes.forEach(function (e) {
        -1 !== t.href.indexOf(e) && $(t).attr("target", "_blank");
      });
    }),
    $(".headerlink").text("Permalink to this headline"),
    $(".headerlink").attr("title", "Permalink to this headline"),
    reponsiveTables(),
    $("table.docutils.list-rows").each(function () {
      $(this).attr("role", "presentation");
    }),
    $(window).on("resize", reponsiveTables);
}

